#include "../include/header.h"

extern volatile sig_atomic_t stop;

byte update(Menu* const menu, Config* const cfg){
    XEvent event;
    KeySym keysym;
    while (!stop){
        while (XPending(menu->display) > 0){
            XNextEvent(menu->display, &event);
            switch (event.type){
                case Expose:
                    draw(cfg, menu, menu->root);
                    break;
                case KeyPress:
                    keysym = XLookupKeysym(&event.xkey, 0);
                    if (keysym == XK_Up){
                        if (!menu->focus->selected)
                            menu->focus->selected
                                = menu->focus->entries;
                        else{
                            menu->focus->selected
                                 = menu->focus->selected->prev;
                        }
                        draw(cfg, menu, menu->root);
                    }
                    else if (keysym == XK_Down){
                        if (!menu->focus->selected)
                            menu->focus->selected
                                = menu->focus->entries;
                        else{
                            menu->focus->selected
                                 = menu->focus->selected->next;
                        }
                        draw(cfg, menu, menu->root);
                    }
                    else if (keysym == XK_Escape) stop = True;
                    break;
            }
        }
    }
    return SUCCESS;
}

void draw(Config* const cfg, Menu* const menu, Windows* window){
    if (!window->visible) return;
    Entry* ptr = window->entries;
    ushort y = cfg->y_padding + cfg->font_size * 0.75;
    while (ptr){
        XSetForeground(menu->display, menu->gc, cfg->bg_color.pixel);
        XFillRectangle(menu->display, window->window, menu->gc,
                       0, y - cfg->font_size - cfg->font_size * 0.25,
                       cfg->x_padding * 2 + strlen(ptr->name)
                       * cfg->font_size * 0.5,
                       cfg->font_size + cfg->spacing);
        if (ptr == window->selected){
            XSetForeground(menu->display, menu->gc,
                           cfg->focus_bg_color.pixel);
            XFillRectangle(menu->display, window->window, menu->gc,
                           0, y - cfg->font_size - cfg->font_size
                           * 0.25, cfg->x_padding * 2
                           + strlen(ptr->name) * cfg->font_size
                           * 0.5, cfg->font_size + cfg->spacing);
            XSetForeground(menu->display, menu->gc,
                           cfg->focus_fg_color.pixel);
        }
        else XSetForeground(menu->display, menu->gc,
                            cfg->fg_color.pixel);
        XDrawString(menu->display, window->window, menu->gc,
                    cfg->x_padding, y, ptr->name, strlen(ptr->name));
        y += cfg->font_size + cfg->spacing;
        if (ptr) draw(cfg, menu, ptr->child);
        ptr = ptr->next;
    }
}
